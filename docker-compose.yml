

services:
  # PHP Service (Application Server)
  app:
    build:
      context: .
      dockerfile: Dockerfile # Assumes a Dockerfile exists for PHP setup
      args:
        UID: "${UID:-1000}" # Pass host user ID for permissions
        GID: "${GID:-1000}" # Pass host group ID for permissions
    container_name: jana-manicure-app 
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      # Pass environment variables from .env file
      PHP_IDE_CONFIG: "serverName=Docker" # Example for Xdebug integration
      XDEBUG_MODE: "${XDEBUG_MODE:-off}" # Control Xdebug mode via .env
      XDEBUG_CONFIG: "client_host=host.docker.internal" # Xdebug config for Docker Desktop
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html # Mount application code
      # Persist bash history (optional)
      # - ./docker-data/bashhistory:/root/.bash_history_docker
    networks:
      - jana-manicure-app_network
    depends_on:
      - db

  # Web Server (Nginx)
  webserver:
    image: nginx:alpine
    container_name: jana-manicure-app_nginx
    restart: unless-stopped
    tty: true
    ports:
      - "${APP_PORT:-8081}:80" # Expose app port from .env or default 8081
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/ # Mount custom Nginx config
    networks:
      - jana-manicure-app_network
    depends_on:
      - app

  # Database Server (PostgreSQL)
  db:
    image: postgres:17
    container_name: jana-manicure-app_db
    restart: unless-stopped
    tty: true
    ports:
      - "${DB_PORT:-5432}:5432" # Expose DB port from .env or default 5432
    environment:
      POSTGRES_DB: "${DB_DATABASE:-jana-manicure-app-db}"
      POSTGRES_USER: "${DB_USERNAME:-sail}" # Use Sail defaults or .env values
      POSTGRES_PASSWORD: "${DB_PASSWORD:-password}"
      POSTGRES_HOST_AUTH_METHOD: "trust" # For easy local connections, change if needed
    volumes:
      - jana-manicure-app_db_data:/var/lib/postgresql/data # Persistent DB data
      # Optional: Mount init scripts
      # - ./docker/db/init:/docker-entrypoint-initdb.d
    networks:
      - jana-manicure-app_network
    healthcheck: # Basic healthcheck
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME:-sail}", "-d", "${DB_DATABASE:-jana-manicure-app-db}"]
      interval: 10s
      timeout: 5s
      retries: 5



# Define Networks
networks:
  jana-manicure-app_network:
    driver: bridge

# Define Volumes
volumes:
  jana-manicure-app_db_data:
    driver: local
